WHY DID YOU FORK MTR?

  I wanted JSON output and I wanted all captured performance fields as 
well as IP, Hostname and ASN (if available) normalized into their own
JSON fields and in a single object.  Neither the CSV or XML output do 
this for you.  

EXAMPLE HOP
```
    {
      "hop": 12,
      "ipaddr": "8.8.8.8",
      "host": "google-public-dns-a.google.com",
      "asn": "AS15169",
      "drop": 0,
      "received": 5,
      "geomean": 4.7,
      "jitter": 0.9,
      "jitteravg": 0.7,
      "jittermax": 1.7,
      "jitterint": 3.4,
      "losspercent": 0,
      "sent": 5,
      "last": 4.2,
      "avg": 4.8,
      "best": 4.2,
      "worst": 5.9,
      "stddev": 0.5
    }
```
INSTALLING

  If you're building this from a tarball, compiling mtr should be as
  simple as:

	make

  It should first call the "configure" script and then run "make" again
  with the makefile that "configure" just generated. 

  If you're building from the git repository, you'll need to run:

	./bootstrap.sh && ./configure && make

  After compiling, install:

	make install

  Note that mtr must be suid-root because it requires access to raw IP 
  sockets.  See SECURITY for security information.

  Older versions used to require a non-existent path to GTK for a
  correct build of a non-gtk version while GTK was installed. This is
  no longer necessary. ./configure --without-gtk should now work. 
  If it doesn't, try "make WITHOUT_X11=YES" as the make step. 

  On Solaris (and possibly other systems) the "gtk" library may be
  installed in a directory where the dynamic linker refuses to look when
  a binary is setuid. Roman Shterenzon reports that adding 
        -Wl,-rpath=/usr/lib
  to the commandline will work if you are using gnu LD. He tells me that
  you're out of luck when you use the sun LD. That's not quite true, as
  you can move the gtk libraries to /usr/lib instead of leaving them in
  /usr/local/lib.  (when the ld tells you that /usr/local/lib is untrusted
  and /usr/lib is trusted, and you trust the gtk libs enough to want them
  in a setuid program, then there is something to say for moving them
  to the "trusted" directory.)

  On Solaris, linking usually fails to find "wattr" or something like that.
  Somehow, I can't seem to be able to automate "configure" finding the right
  libs on Solaris. So, the solution is that you cut-and-paste the line
  doing the linking into a terminal window, and add "-lcurses" by hand. 
  Then it will link. Help on how to catch this in autoconf appreciated.

  On Mac OS X the nameserver8_compat.h needs to be included. I put the 
  include inside an "#if 0" section in the file "dns.c". If someone 
  knows how to make this automatic using autoconf / the configure script, 
  please tell me.... 

  This should now also work: 
  ./configure CFLAGS="-arch i386 -arch x86_64" LIBS="-lresolv" \
       --without-gtk --disable-endian-check --disable-dependency-tracking


